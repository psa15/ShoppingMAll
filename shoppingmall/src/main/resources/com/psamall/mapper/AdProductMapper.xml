<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.psamall.mapper.AdProductMapper">

	<!-- 1차 카테고리 불러오기 -->
	<select id="firstCateList" resultType="com.psamall.domain.CatetgoryVO">
	
		SELECT
			Ct_CODE, CT_P_CODE, CT_NAME
		FROM
			TBL_CATEGORY
		WHERE
			CT_P_CODE is NULL
			
	</select>
	
	<!-- 2차 카테고리 불러오기 -->
	<select id="secondCateList" resultType="com.psamall.domain.CatetgoryVO">
	
	SELECT
			Ct_CODE, CT_P_CODE, CT_NAME
		FROM
			TBL_CATEGORY
		WHERE
			CT_P_CODE = #{firstCategoryCode}
	
	</select>
	
	
	<!-- 상품등록 폼의 정보 저장 -->
	<insert id="insertProduct">
	
		INSERT INTO 
			TBL_PRODUCT(P_NUM, F_CT_CODE, S_CT_CODE, P_NAME, P_COST, P_DISCOUNT,
						 P_COMPANY, P_IMAGE, P_AMOUNT, P_DETAIL, P_IMAGE_FOLDER)
						 
		VALUES(SEQ_PRODUCT.nextval, #{f_ct_code}, #{s_ct_code}, #{p_name}, #{p_cost}, #{p_discount}, 
				#{p_company}, #{p_image}, #{p_amount}, #{p_detail}, #{p_image_folder})
	
	</insert>
	
	<!-- 검색 조건 쿼리 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR"><!-- serffix 공백 주의 -->
			<foreach collection="typeArr" item="type">
			 <!-- jstl문법의 foreach와는 다름, 이건 mybatis 문법 -->
			 <!-- 6개 type에 따라 상황이 달라지기 때문에 이렇게 복잡해짐 -->
			 <!-- typeArr : 파라미터타입의 Criteria클래스의 getter메소드를 가리킴, 검색종류(타입)의 값을 참조 -->
			 	<trim prefix="OR">
			 		<choose>
			 			<!-- T, C, W 제외 다른 type은 조합이기 때문에 when절은 3개만 -->
			 			<when test="type == 'N'.toString()">
			 				P_NAME LIKE '%' || #{keyword} || '%'
			 			</when>
			 			<when test="type == 'C'.toString()">
			 				P_COMPANY LIKE '%' || #{keyword} || '%'
			 			</when>
			 			<when test="type == 'Y'.toString()">
			 				P_BUY_OK LIKE '%' || #{keyword} || '%'
			 			</when>
			 		</choose>
			 	</trim>
			</foreach>		
		</trim>
	</sql>
	
	<!-- 상품목록 -->
	<!-- 인라인 뷰에 언급된 컬럼만이 바깥 SELECT구문에 언급할 수 있음 -->
	<select id="getProductList" resultType="com.psamall.domain.ProductVO">
		<![CDATA[
		SELECT 
			RN, P_NUM, F_CT_CODE, S_CT_CODE, P_NAME, P_COST, P_DISCOUNT, 
			P_COMPANY, P_IMAGE, P_IMAGE_FOLDER,  P_AMOUNT,
			P_BUY_OK, P_REGDATE, P_UPDATEDATE, P_DETAIL
		FROM(
		    SELECT 
		    	/*+ INDEX_DESC(TBL_PRODUCT PK_PRODUCT) */ 
		    	ROWNUM RN,  P_NUM, F_CT_CODE, S_CT_CODE, P_NAME, P_COST, P_DISCOUNT, 
		    	P_COMPANY, P_IMAGE, P_IMAGE_FOLDER, P_AMOUNT,
                P_BUY_OK, P_REGDATE, P_UPDATEDATE, P_DETAIL
		    FROM 
				TBL_PRODUCT
		    WHERE
		]]>
				<include refid="criteria"></include>
				<!-- <![CDATA[ ]]> 안에 들어가면 태그가 아닌 문자열로 읽게 됨 -->
		<![CDATA[
			 ROWNUM <= #{pageNum} * #{amount}
		)
		WHERE RN > (#{pageNum}-1) * #{amount}	
		]]>
		<!-- <를 문자로 보는 것이 아니라 시작태그 문자로 봐서 오류가 남 - 파싱 이라고 부름
				어떤 문자든 신경쓰지말고 스킵하게 하는 XML문법이 이씀
				CDATA 섹션 : <![CDATA[내용]]>  -->
	</select>
	
	<!-- 상품 목록 개수 : 페이징 구현 사용 -->
	<select id="getProductTotalCount" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			TBL_PRODUCT
		WHERE
			<include refid="criteria"></include>
			P_NUM > 0		
	</select>
	
	<!-- 상품코드를 통해 상품 정보 가져오기 - 상품 수정 폼 -->
	<select id="getProductByPNum" resultType="com.psamall.domain.ProductVO">
	
		SELECT
			P_NUM, F_CT_CODE, S_CT_CODE, P_NAME, P_COST, P_DISCOUNT, 
			P_COMPANY, P_IMAGE, P_IMAGE_FOLDER,  P_AMOUNT,
			P_BUY_OK, P_REGDATE, P_UPDATEDATE, P_DETAIL
		FROM
			TBL_PRODUCT
		WHERE 
			P_NUM = #{p_num}
	
	</select>
	
	<!-- 상품 수정 저장 -->
	<update id="updateProduct">
	
		UPDATE
			TBL_PRODUCT
		SET
			F_CT_CODE = #{f_ct_code}, 
			S_CT_CODE = #{s_ct_code}, 
			P_NAME = #{p_name}, 
			P_COST = #{p_cost}, 
			P_DISCOUNT = #{p_discount}, 
			P_COMPANY = #{p_company}, 
			P_IMAGE = #{p_image}, 
			P_IMAGE_FOLDER = #{p_image_folder},  
			P_AMOUNT = #{p_amount},
			P_BUY_OK = #{p_buy_ok}, 
			P_UPDATEDATE = sysdate, 
			P_DETAIL = #{p_detail}
		WHERE
			P_NUM = #{p_num}
	
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="deleteProduct">
	
		DELETE FROM 
			TBL_PRODUCT
		WHERE
			P_NUM = #{p_num}
	
	</delete>
</mapper>